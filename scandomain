#! /usr/bin/python3

import dns.resolver

def has_ms(mx_record_parm):
	return_value = False
	if "outlook.com" in  mx_record_parm:
		return_value = True
	return return_value

def detect_duplicate_domain(current_domain):
	return_value = False
	x = 0
	while x < domain_list_inc :
		if current_domain == domain_list[x]:
			global domain_duplicates_inc  
			domain_duplicates_inc += 1
			return_value = True
		x += 1
	return return_value

f=open("MX-check-klanten.csv", "r", encoding='ISO-8859-1')
i_del = ";"
ms=open("microsoft.txt", "w")
nonms=open("nonms.txt", "w")
protected=open("protected.txt", "w")
csv_export=open("output.csv", "w")

ms_inc = 0
nonms_inc = 0
protected_inc = 0
domain_list_inc = 0
domain_duplicates_inc = 0
domain_list = []
domain_error_inc = 0
csv_export.write("CustomerNr,CustomerName,AlreadyBCDcustomer,Domain,Email,HighestMX,Preference,CustomerType\n")
skip_header = next(f)
for import_record in f:
	#print(import_record)
	domain_error = False
	mailadres=import_record.split(i_del)[1]
	print("[" + str(domain_list_inc) + "]" + mailadres + "                       ", end = " \r")
	try:
		y=mailadres.split('@')[1]
	except:
		domain_error = True
	domain=y.split ('\n')[0]
	if detect_duplicate_domain(domain) == False:
		customer_type = "undefined"
		domain_list.append(domain)
		domain_list_inc += 1
		mx_preference = 1000
		try:
			mailservers = dns.resolver.query(domain, 'MX')
		except:
			print("Error for domain: " + domain)
			domain_error_inc += 1
			domain_error = True
		atleast_one_ms = False
		for mx_item in mailservers:
			if has_ms(mx_item.exchange.to_text()) == True:
				atleast_one_ms = True
			if mx_item.preference < mx_preference:
				mx_preference = mx_item.preference
				lowest_mx = mx_item.exchange
		#print(domain + "\t" + lowest_mx.to_text() + "\t" + str(atleast_one_ms))
		#print("Checking domain number: " + str(%domain_list_inc))
		if domain_error == False:
			if has_ms(lowest_mx.to_text()) == True:
				ms.write(domain + "\n")
				ms_inc += 1
				customer_type = "unpotected"
			else:
				if atleast_one_ms == True:
					protected.write(domain + "\n")
					protected_inc += 1
					customer_type = "protected"
				else:
					nonms.write(domain + "\n")
					nonms_inc += 1
					customer_type = "other"
			csv_export.write(import_record.split(i_del)[0] + "," + import_record.split(i_del)[2] + "," + import_record.split(i_del)[3].split("\n")[0] + "," + domain + "," + mailadres.split('\n')[0] + "," + lowest_mx.to_text() + "," + str(mx_preference) + "," + customer_type + "\n")
f.close()
ms.close()
nonms.close()
csv_export.close()
print("Result of analysing email domains in search of protection.")
print("\nOffice 365 users : " + str(ms_inc))
print("Protected : " + str(protected_inc))
print("Others : " + str(nonms_inc))
print("Duplicate domains ignored : " + str(domain_duplicates_inc))
print("Domains treated : " + str(domain_list_inc))
print("Domain errors : " + str(domain_error_inc))
